// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

model Post {
  id            Int         @default(autoincrement()) @id
  title         String
  description   String 
  videoUrl      String      @map("video_url")
  thumbnailUrl  String      @map("thumbnail_url")
  status        PostStatus  @default(DRAFT)
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  author        User        @relation(fields: [authorId], references: [id])
  authorId      Int         @map("author_id")
  likes         Like[]

  @@map("posts")
}

enum PostStatus {
  DRAFT
  PUBLISH
}

model User {
  id            Int           @default(autoincrement()) @id
  name          String
  username      String?       @unique
  email         String?       @unique
  emailVerified DateTime?     @map("email_verified")
  image         String?
  bio           String?
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  posts         Post[]
  likes         Like[]

  @@map("users")
}

model Like {
  id            Int           @default(autoincrement()) @id
  user          User          @relation(fields: [userId], references: [id])
  userId        Int           @map("user_id")
  post          Post          @relation(fields: [postId], references: [id])
  postId        Int           @map("post_id")

  @@map("likes")
}

model Account {
  id                 Int          @default(autoincrement()) @id
  compoundId         String       @unique @map("compound_id")
  userId             Int          @map("user_id")
  providerType       String       @map("provider_type")
  providerId         String       @map("provider_id")
  providerAccountId  String       @map(name: "provider_account_id")
  refreshToken       String?      @map(name: "refresh_token")
  accessToken        String?      @map(name: "access_token")
  accessTokenExpires DateTime?    @map(name: "access_token_expires")
  createdAt          DateTime     @default(now()) @map(name: "created_at")
  updatedAt          DateTime     @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")

  @@map(name: "accounts")
}

model Session {
  id           Int      @default(autoincrement()) @id
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}